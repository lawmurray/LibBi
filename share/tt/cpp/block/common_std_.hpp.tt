[%
## @file
##
## @author Lawrence Murray <lawrence.murray@csiro.au>
## $Rev$
## $Date$
%]

[%-
std = block.get_actions.0.get_named_arg('std');
target = block.get_actions.0.get_left;
-%]

[%-PROCESS block/misc/header.hpp.tt-%]

/**
 * Block: common_std_.
 */
class [% class_name %] {
public:
  [% declare_block_static_function('simulate') %]
  [% declare_block_static_function('sample') %]
  [% declare_block_static_function('logdensity') %]
  [% declare_block_static_function('maxlogdensity') %]

  [% declare_block_dynamic_function('simulate') %]
  [% declare_block_dynamic_function('sample') %]
  [% declare_block_dynamic_function('logdensity') %]
  [% declare_block_dynamic_function('maxlogdensity') %]
};

#include "bi/primitive/matrix_primitive.hpp"

[% sig_block_static_function('simulate') %] {
  BOOST_AUTO(std, [% block_gets_var(std) %]);
  BOOST_AUTO(target, [% block_gets_var(target) %]);
  BOOST_AUTO(target1, bi::reshape(target, s.size(), target.size1()*target.size2()/s.size());

  set_rows(target1, bi::vec(std));
}

[% std_block_static_function('sample') %]
[% std_block_static_function('logdensity') %]
[% std_block_static_function('maxlogdensity') %]

[% std_block_dynamic_function('simulate') %]
[% std_block_dynamic_function('sample') %]
[% std_block_dynamic_function('logdensity') %]
[% std_block_dynamic_function('maxlogdensity') %]

[% PROCESS 'block/misc/footer.hpp.tt' %]
